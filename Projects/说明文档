一、项目的搭建
1.首先创建一个新的文件夹，作为文件的地址
2.在终端进入这个目录，然后创建项目：django-admin startproject 项目名称
3.然后会自动生成一个项目目录，进入到这个目录下，创建自己的应用:python manage.py startapp 应用名称
4.将myapp添加到setting.py的INSTALLED_APPS中。

二、配置MySQL数据库(Django自带的是SQLite数据库)
1.首先在__init__中，导入pymysql，如下：
import pymysql
pymysql.install_as_MySQLdb()
2.在终端开启数据库服务器：net start 数据库名称（安装的时候配置的）
3.创建数据库，首先在终端进入数据库：mysql -u root -p
4.创建数据库：create database 数据库名称

4.在setting中配置数据库，更改DATABASES，如下：
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', ##换为mysql
        'NAME': "pro_name",  ## 数据库名称
        'USER': 'root',  ## 用户名
        'PASSWORD': '123456', ## 数据库密码
        'HOST': 'localhost', ## 数据库服务器ip
        'PORT': '3306', ## 端口号
    }
三、创建应用
在一个项目中可以创建多个应用，每个应用进行一中业务处理
1. 打开终端，进入到项目目录，创建自己的应用:python manage.py startapp 应用名称
2. 生成应用myApp，有以下文件
admin.py : 站点配置
models.py ：模型
views.py ：视图
3. 激活应用，将应用配置到setting.py中的,将myApp添加到setting.py的INSTALLED_APPS中。

四、定义模型
有一个数据表，就对应一个模型
1. 在myApp下的models.py中定义模型，模型类要继承models.Model类
from django.db import models
class Grades(models.Model):   ##继承models的Model
    gname = models.CharField(max_length=20)  #字段的类型第一个都是大写的
    gdate = models.DateTimeField()
    ggirlnum = models.IntegerField()
    gboynum = models.IntegerField()
    isDelete = models.BooleanField() ## 还有一个是NullBooleanField(),None/True/False
注：一个类对应数据库中的一个表，类里面的属性会对应表里面的一个字段。

2. 表关联涉及到一对多，外键写在多的里面，主键会自动生成
    sgrade = models.ForeignKey("Grades") ## 关联外键

3. 在数据库中生成数据表：
1）生成迁移文件：python manage.py makemigrations
执行上一行代码后，会在migration下自动生成一个0001_initial.py，与models.py相对应，但会自动生成主键id
接下来可以查看数据库是否生成了两个表：show tables;
执行完生成文件之后，此时数据库中并没有数据表生成。
2）执行迁移文件：python manage.py migrate
可以在数据库中手动的去创建，但是很麻烦。